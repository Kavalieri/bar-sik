{
  "summary": {
    "total_files": 63,
    "duplicated_functions": 187,
    "debug_files": 57,
    "complex_files": 17
  },
  "analysis": {
    "duplicated_functions": [
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\Credits.gd",
          "name": "_input",
          "line": 25,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SettingsMenu.gd",
          "name": "_input",
          "line": 113,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_connect_panel_signals",
          "line": 42,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_connect_panel_signals",
          "line": 44,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_connect_panel_signals",
          "line": 42,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_connect_panel_signals",
          "line": 41,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 241,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 241,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 241,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 242,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_connect_panel_signals",
          "line": 44,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_connect_panel_signals",
          "line": 41,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "create_station_button",
          "line": 135,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> VBoxContainer:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "create_station_button",
          "line": 135,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> VBoxContainer:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_format_recipe_with_availability",
          "line": 212,
          "signature": "func _format_recipe_with_availability(station_id: String) -> String:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_format_recipe_with_availability",
          "line": 212,
          "signature": "func _format_recipe_with_availability(station_id: String) -> String:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 275,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 275,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 242,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "update_station_displays",
          "line": 330,
          "signature": "func update_station_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "update_station_displays",
          "line": 330,
          "signature": "func update_station_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "update_product_displays",
          "line": 342,
          "signature": "func update_product_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "update_product_displays",
          "line": 342,
          "signature": "func update_product_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 413,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 413,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 413,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 397,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "can_afford_production",
          "line": 419,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "can_afford_production",
          "line": 403,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_unlock_cost",
          "line": 433,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_unlock_cost",
          "line": 417,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_current_game_data",
          "line": 442,
          "signature": "func get_current_game_data() -> Dictionary:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_current_game_data",
          "line": 426,
          "signature": "func get_current_game_data() -> Dictionary:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "create_station_button",
          "line": 155,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> Control:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "create_station_button",
          "line": 155,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> Control:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "create_styled_panel",
          "line": 218,
          "signature": "func create_styled_panel(color: Color) -> StyleBoxFlat:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "create_styled_panel",
          "line": 218,
          "signature": "func create_styled_panel(color: Color) -> StyleBoxFlat:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "update_all_states",
          "line": 245,
          "signature": "func update_all_states(game_data: Dictionary = {}):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "update_all_states",
          "line": 245,
          "signature": "func update_all_states(game_data: Dictionary = {}):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "update_product_displays",
          "line": 265,
          "signature": "func update_product_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "update_product_displays",
          "line": 265,
          "signature": "func update_product_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "find_product_amount_label",
          "line": 278,
          "signature": "func find_product_amount_label(product_id: String) -> Label:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "find_product_amount_label",
          "line": 278,
          "signature": "func find_product_amount_label(product_id: String) -> Label:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "update_station_displays",
          "line": 283,
          "signature": "func update_station_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "update_station_displays",
          "line": 283,
          "signature": "func update_station_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_update_single_station_state",
          "line": 287,
          "signature": "func _update_single_station_state(station_id: String, game_data: Dictionary = {}):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_update_single_station_state",
          "line": 287,
          "signature": "func _update_single_station_state(station_id: String, game_data: Dictionary = {}):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_current_game_data",
          "line": 377,
          "signature": "func get_current_game_data() -> Dictionary:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_current_game_data",
          "line": 377,
          "signature": "func get_current_game_data() -> Dictionary:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_format_recipe_with_availability",
          "line": 385,
          "signature": "func _format_recipe_with_availability(station_id: String) -> String:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_format_recipe_with_availability",
          "line": 385,
          "signature": "func _format_recipe_with_availability(station_id: String) -> String:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 445,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 445,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_products_section",
          "line": 54,
          "signature": "func setup_products_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_stations_section",
          "line": 77,
          "signature": "func setup_stations_section():"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_ingredient_available_amount",
          "line": 236,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_ingredient_available_amount",
          "line": 407,
          "signature": "func get_ingredient_available_amount(ingredient_id: String) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_get_next_multiplier",
          "line": 301,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_get_next_multiplier",
          "line": 242,
          "signature": "func _get_next_multiplier(current: int) -> int:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 397,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 397,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "is_station_unlocked_from_manager",
          "line": 348,
          "signature": "func is_station_unlocked_from_manager(station_id: String) -> bool:"
        }
      },
      {
        "similarity": 1.0,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameUtils.gd",
          "name": "clear_container_children",
          "line": 99,
          "signature": "func clear_container_children(container: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BasePanel.gd",
          "name": "clear_container_children",
          "line": 90,
          "signature": "func clear_container_children(container: Node):"
        }
      },
      {
        "similarity": 0.98856416772554,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "can_afford_production",
          "line": 419,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 0.98856416772554,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "can_afford_production",
          "line": 419,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 0.98856416772554,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "can_afford_production",
          "line": 403,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 0.98856416772554,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "can_afford_production",
          "line": 403,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "can_afford_production",
          "line": 354,
          "signature": "func can_afford_production(station_id: String, quantity: int, game_data: Dictionary) -> bool:"
        }
      },
      {
        "similarity": 0.98,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd",
          "name": "_on_quit_pressed",
          "line": 76,
          "signature": "func _on_quit_pressed() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\singletons\\Router.gd",
          "name": "quit_game",
          "line": 103,
          "signature": "func quit_game() -> void:"
        }
      },
      {
        "similarity": 0.9621621621621622,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\CurrencyDisplay.gd",
          "name": "_process",
          "line": 73,
          "signature": "func _process(_delta: float) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd",
          "name": "_process",
          "line": 135,
          "signature": "func _process(_delta: float) -> void:"
        }
      },
      {
        "similarity": 0.9583333333333334,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "set_generator_manager",
          "line": 251,
          "signature": "func set_generator_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "set_generator_manager",
          "line": 163,
          "signature": "func set_generator_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.9429429429429429,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_unlock_cost",
          "line": 433,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 0.9429429429429429,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_unlock_cost",
          "line": 433,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 0.9429429429429429,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_unlock_cost",
          "line": 417,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 0.9429429429429429,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_unlock_cost",
          "line": 417,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "get_unlock_cost",
          "line": 368,
          "signature": "func get_unlock_cost(station_id: String) -> float:"
        }
      },
      {
        "similarity": 0.937034529451591,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 0.937034529451591,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 0.937034529451591,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 0.937034529451591,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_on_station_buy_pressed",
          "line": 252,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_on_station_buy_pressed",
          "line": 423,
          "signature": "func _on_station_buy_pressed(station_id: String):"
        }
      },
      {
        "similarity": 0.9333333333333333,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd",
          "name": "_input",
          "line": 82,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\PauseMenu.gd",
          "name": "_input",
          "line": 56,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 0.9322033898305084,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\Credits.gd",
          "name": "_input",
          "line": 25,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd",
          "name": "_input",
          "line": 82,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 0.9322033898305084,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd",
          "name": "_input",
          "line": 82,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SettingsMenu.gd",
          "name": "_input",
          "line": 113,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 0.9290176036342986,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 22,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.9290176036342986,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 22,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.9290176036342986,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 22,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.9290176036342986,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 22,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.926052332195677,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 214,
          "signature": "func _on_multiplier_button_pressed(generator_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 215,
          "signature": "func _on_multiplier_button_pressed(item_id: String):"
        }
      },
      {
        "similarity": 0.9166666666666666,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\Credits.gd",
          "name": "_input",
          "line": 25,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\PauseMenu.gd",
          "name": "_input",
          "line": 56,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 0.9166666666666666,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\PauseMenu.gd",
          "name": "_input",
          "line": 56,
          "signature": "func _input(event: InputEvent) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SettingsMenu.gd",
          "name": "_input",
          "line": 113,
          "signature": "func _input(event: InputEvent) -> void:"
        }
      },
      {
        "similarity": 0.9146005509641874,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        }
      },
      {
        "similarity": 0.9125,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "update_upgrade_displays",
          "line": 196,
          "signature": "func update_upgrade_displays(game_data: Dictionary) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "update_station_displays",
          "line": 190,
          "signature": "func update_station_displays(game_data: Dictionary) -> void:"
        }
      },
      {
        "similarity": 0.910377358490566,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\OffersScene.gd",
          "name": "_apply_theme_styling",
          "line": 51,
          "signature": "func _apply_theme_styling() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ShopScene.gd",
          "name": "_apply_theme_styling",
          "line": 39,
          "signature": "func _apply_theme_styling() -> void:"
        }
      },
      {
        "similarity": 0.9080459770114943,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_all_generators",
          "line": 258,
          "signature": "func refresh_all_generators():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_all_items",
          "line": 263,
          "signature": "func refresh_all_items():"
        }
      },
      {
        "similarity": 0.9043478260869565,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_ready",
          "line": 17,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 0.9043478260869565,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_ready",
          "line": 17,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 0.9043478260869565,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_ready",
          "line": 17,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 0.9043478260869565,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "_ready",
          "line": 17,
          "signature": "func _ready():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_ready",
          "line": 19,
          "signature": "func _ready():"
        }
      },
      {
        "similarity": 0.9035812672176309,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        }
      },
      {
        "similarity": 0.8973607038123167,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "get_current_game_data",
          "line": 442,
          "signature": "func get_current_game_data() -> Dictionary:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "get_current_game_data",
          "line": 351,
          "signature": "func get_current_game_data() -> Dictionary:"
        }
      },
      {
        "similarity": 0.8973607038123167,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "get_current_game_data",
          "line": 426,
          "signature": "func get_current_game_data() -> Dictionary:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "get_current_game_data",
          "line": 351,
          "signature": "func get_current_game_data() -> Dictionary:"
        }
      },
      {
        "similarity": 0.8936170212765957,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BeverageButton.gd",
          "name": "_play_click_effect",
          "line": 80,
          "signature": "func _play_click_effect() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd",
          "name": "_play_click_effect",
          "line": 124,
          "signature": "func _play_click_effect() -> void:"
        }
      },
      {
        "similarity": 0.8860103626943006,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 33,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.882702301410542,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "create_resource_panel",
          "line": 92,
          "signature": "func create_resource_panel(resource_id: String, data: Dictionary) -> Panel:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        }
      },
      {
        "similarity": 0.882702301410542,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "create_resource_panel",
          "line": 92,
          "signature": "func create_resource_panel(resource_id: String, data: Dictionary) -> Panel:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "create_product_display_panel",
          "line": 98,
          "signature": "func create_product_display_panel(product_id: String, data: Dictionary) -> Panel:"
        }
      },
      {
        "similarity": 0.8782287822878229,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "get_generator_multiplier",
          "line": 269,
          "signature": "func get_generator_multiplier(generator_id: String) -> int:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "get_item_multiplier",
          "line": 274,
          "signature": "func get_item_multiplier(item_id: String) -> int:"
        }
      },
      {
        "similarity": 0.868421052631579,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\OffersScene.gd",
          "name": "_on_back_pressed",
          "line": 172,
          "signature": "func _on_back_pressed() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ShopScene.gd",
          "name": "_on_back_pressed",
          "line": 215,
          "signature": "func _on_back_pressed() -> void:"
        }
      },
      {
        "similarity": 0.8608247422680413,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 36,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 33,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.8491620111731844,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_all_items",
          "line": 263,
          "signature": "func refresh_all_items():"
        }
      },
      {
        "similarity": 0.8491620111731844,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_all_items",
          "line": 263,
          "signature": "func refresh_all_items():"
        }
      },
      {
        "similarity": 0.8472505091649695,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_on_resource_action",
          "line": 196,
          "signature": "func _on_resource_action(item_id: String, action: String) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_on_stats_action",
          "line": 258,
          "signature": "func _on_stats_action(item_id: String, action: String) -> void:"
        }
      },
      {
        "similarity": 0.8461538461538461,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_all_generators",
          "line": 258,
          "signature": "func refresh_all_generators():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        }
      },
      {
        "similarity": 0.8461538461538461,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_all_generators",
          "line": 258,
          "signature": "func refresh_all_generators():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_station_displays",
          "line": 318,
          "signature": "func refresh_station_displays():"
        }
      },
      {
        "similarity": 0.84472049689441,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\OffersComponent.gd",
          "name": "_clear_offer_interfaces",
          "line": 183,
          "signature": "func _clear_offer_interfaces() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\StockDisplayComponent.gd",
          "name": "_clear_interfaces",
          "line": 409,
          "signature": "func _clear_interfaces() -> void:"
        }
      },
      {
        "similarity": 0.8426395939086294,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 36,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.8423076923076923,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "set_generator_multiplier",
          "line": 275,
          "signature": "func set_generator_multiplier(generator_id: String, multiplier: int):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "set_item_multiplier",
          "line": 280,
          "signature": "func set_item_multiplier(item_id: String, multiplier: int):"
        }
      },
      {
        "similarity": 0.8415300546448088,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 33,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.8414985590778098,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_all_items",
          "line": 263,
          "signature": "func refresh_all_items():"
        }
      },
      {
        "similarity": 0.8414985590778098,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_all_items",
          "line": 263,
          "signature": "func refresh_all_items():"
        }
      },
      {
        "similarity": 0.839572192513369,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 36,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.8393719806763285,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 275,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 215,
          "signature": "func _on_multiplier_button_pressed(item_id: String):"
        }
      },
      {
        "similarity": 0.8393719806763285,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 275,
          "signature": "func _on_multiplier_button_pressed(station_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "_on_multiplier_button_pressed",
          "line": 215,
          "signature": "func _on_multiplier_button_pressed(item_id: String):"
        }
      },
      {
        "similarity": 0.8311688311688312,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ProductionManager.gd",
          "name": "_ready",
          "line": 13,
          "signature": "func _ready() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\singletons\\StockManager.gd",
          "name": "_ready",
          "line": 10,
          "signature": "func _ready() -> void:"
        }
      },
      {
        "similarity": 0.8233034571062741,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 22,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 25,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.8200890019071837,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 25,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.8200890019071837,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 25,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.8200890019071837,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 25,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.8200890019071837,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "setup_basic_layout",
          "line": 24,
          "signature": "func setup_basic_layout():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "setup_basic_layout",
          "line": 25,
          "signature": "func setup_basic_layout():"
        }
      },
      {
        "similarity": 0.8170731707317073,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BeverageButton.gd",
          "name": "_ready",
          "line": 22,
          "signature": "func _ready() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd",
          "name": "_ready",
          "line": 23,
          "signature": "func _ready() -> void:"
        }
      },
      {
        "similarity": 0.8158640226628895,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_all_generators",
          "line": 258,
          "signature": "func refresh_all_generators():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        }
      },
      {
        "similarity": 0.8158640226628895,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_all_generators",
          "line": 258,
          "signature": "func refresh_all_generators():"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "refresh_product_displays",
          "line": 324,
          "signature": "func refresh_product_displays():"
        }
      },
      {
        "similarity": 0.8153846153846154,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BeverageButton.gd",
          "name": "_on_pressed",
          "line": 72,
          "signature": "func _on_pressed() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd",
          "name": "_on_pressed",
          "line": 116,
          "signature": "func _on_pressed() -> void:"
        }
      },
      {
        "similarity": 0.8148148148148148,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "set_customer_manager",
          "line": 24,
          "signature": "func set_customer_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "set_sales_manager",
          "line": 23,
          "signature": "func set_sales_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.8117154811715481,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "refresh_single_generator",
          "line": 264,
          "signature": "func refresh_single_generator(generator_id: String):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "refresh_single_item",
          "line": 269,
          "signature": "func refresh_single_item(item_id: String):"
        }
      },
      {
        "similarity": 0.8070175438596491,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "update_station_displays",
          "line": 330,
          "signature": "func update_station_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "update_inventory_displays",
          "line": 288,
          "signature": "func update_inventory_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 0.8070175438596491,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "update_station_displays",
          "line": 330,
          "signature": "func update_station_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "update_inventory_displays",
          "line": 288,
          "signature": "func update_inventory_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 0.8064516129032258,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd",
          "name": "_ready",
          "line": 112,
          "signature": "func _ready() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UpgradeManager.gd",
          "name": "_ready",
          "line": 152,
          "signature": "func _ready() -> void:"
        }
      },
      {
        "similarity": 0.8023952095808383,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_update_panel_data",
          "line": 48,
          "signature": "func _update_panel_data(game_data: Dictionary) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_update_panel_data",
          "line": 50,
          "signature": "func _update_panel_data(game_data: Dictionary) -> void:"
        }
      },
      {
        "similarity": 0.8010752688172043,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_initialize_panel_specific",
          "line": 34,
          "signature": "func _initialize_panel_specific() -> void:"
        }
      },
      {
        "similarity": 0.7956043956043956,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "calculate_generator_cost",
          "line": 371,
          "signature": "func calculate_generator_cost(generator_id: String, current_owned: float) -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "calculate_generator_cost",
          "line": 142,
          "signature": "func calculate_generator_cost(generator_id: String, current_owned: float) -> float:"
        }
      },
      {
        "similarity": 0.7909604519774012,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "set_customer_manager",
          "line": 24,
          "signature": "func set_customer_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "set_production_manager",
          "line": 26,
          "signature": "func set_production_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.7885714285714286,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "set_customer_manager",
          "line": 24,
          "signature": "func set_customer_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "set_generator_manager",
          "line": 24,
          "signature": "func set_generator_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.7874564459930313,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "set_generator_manager",
          "line": 251,
          "signature": "func set_generator_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7874564459930313,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "set_generator_manager",
          "line": 251,
          "signature": "func set_generator_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7807270628967109,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "_update_single_station_state",
          "line": 357,
          "signature": "func _update_single_station_state(station_id: String, game_data: Dictionary = {}):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "_update_single_station_state",
          "line": 357,
          "signature": "func _update_single_station_state(station_id: String, game_data: Dictionary = {}):"
        }
      },
      {
        "similarity": 0.7769423558897243,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "update_resource_displays",
          "line": 153,
          "signature": "func update_resource_displays(game_data: Dictionary) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "update_product_displays",
          "line": 163,
          "signature": "func update_product_displays(game_data: Dictionary) -> void:"
        }
      },
      {
        "similarity": 0.7757575757575758,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "set_generator_manager",
          "line": 24,
          "signature": "func set_generator_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "set_sales_manager",
          "line": 23,
          "signature": "func set_sales_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.7723577235772358,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "update_generator_displays",
          "line": 294,
          "signature": "func update_generator_displays(game_data: Dictionary):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
          "name": "update_inventory_displays",
          "line": 288,
          "signature": "func update_inventory_displays(game_data: Dictionary):"
        }
      },
      {
        "similarity": 0.7721131327688705,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "create_generator_button",
          "line": 128,
          "signature": "func create_generator_button(generator_id: String, data: Dictionary) -> Control:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "create_station_button",
          "line": 135,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> VBoxContainer:"
        }
      },
      {
        "similarity": 0.7721131327688705,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "create_generator_button",
          "line": 128,
          "signature": "func create_generator_button(generator_id: String, data: Dictionary) -> Control:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "create_station_button",
          "line": 135,
          "signature": "func create_station_button(station_id: String, data: Dictionary) -> VBoxContainer:"
        }
      },
      {
        "similarity": 0.7711864406779662,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "set_production_manager",
          "line": 26,
          "signature": "func set_production_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7711864406779662,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "set_production_manager",
          "line": 26,
          "signature": "func set_production_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7705627705627706,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "set_generator_manager",
          "line": 24,
          "signature": "func set_generator_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
          "name": "set_generator_manager",
          "line": 251,
          "signature": "func set_generator_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7668393782383419,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "_connect_panel_signals",
          "line": 24,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_connect_panel_signals",
          "line": 44,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 0.7668393782383419,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "_connect_panel_signals",
          "line": 24,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_connect_panel_signals",
          "line": 41,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 0.7650273224043715,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\FinalSystemTest.gd",
          "name": "_ready",
          "line": 5,
          "signature": "func _ready() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\TestGeneratorPersistence.gd",
          "name": "_ready",
          "line": 5,
          "signature": "func _ready() -> void:"
        }
      },
      {
        "similarity": 0.7574468085106383,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "set_generator_manager",
          "line": 24,
          "signature": "func set_generator_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "set_generator_manager",
          "line": 163,
          "signature": "func set_generator_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7559523809523809,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7559523809523809,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7559523809523809,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7559523809523809,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
          "name": "set_production_manager",
          "line": 235,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7555555555555555,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "set_generator_manager",
          "line": 24,
          "signature": "func set_generator_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "set_production_manager",
          "line": 26,
          "signature": "func set_production_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.7522388059701492,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\IdleBuyButton.gd",
          "name": "get_current_cost",
          "line": 109,
          "signature": "func get_current_cost() -> float:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\BuyCard.gd",
          "name": "_calculate_total_price",
          "line": 125,
          "signature": "func _calculate_total_price() -> float:"
        }
      },
      {
        "similarity": 0.7509881422924901,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "_update_panel_data",
          "line": 28,
          "signature": "func _update_panel_data(game_data: Dictionary) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_update_panel_data",
          "line": 50,
          "signature": "func _update_panel_data(game_data: Dictionary) -> void:"
        }
      },
      {
        "similarity": 0.7505154639175258,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_on_resource_action",
          "line": 196,
          "signature": "func _on_resource_action(item_id: String, action: String) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_on_product_action",
          "line": 250,
          "signature": "func _on_product_action(item_id: String, action: String) -> void:"
        }
      },
      {
        "similarity": 0.7491408934707904,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "set_generator_manager",
          "line": 163,
          "signature": "func set_generator_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7491408934707904,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "set_generator_manager",
          "line": 163,
          "signature": "func set_generator_manager(manager: Node):"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
          "name": "set_production_manager",
          "line": 313,
          "signature": "func set_production_manager(manager: Node):"
        }
      },
      {
        "similarity": 0.7461139896373057,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_connect_panel_signals",
          "line": 42,
          "signature": "func _connect_panel_signals() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
          "name": "_connect_panel_signals",
          "line": 24,
          "signature": "func _connect_panel_signals() -> void:"
        }
      },
      {
        "similarity": 0.7394957983193278,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameUtils.gd",
          "name": "is_manager_valid",
          "line": 7,
          "signature": "func is_manager_valid(manager_ref: Node) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BasePanel.gd",
          "name": "is_manager_valid",
          "line": 85,
          "signature": "func is_manager_valid(manager_ref: Node) -> bool:"
        }
      },
      {
        "similarity": 0.7380952380952381,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd",
          "name": "is_resource_unlocked",
          "line": 246,
          "signature": "func is_resource_unlocked(resource_id: String) -> bool:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UpgradeManager.gd",
          "name": "is_upgrade_unlocked",
          "line": 217,
          "signature": "func is_upgrade_unlocked(upgrade_id: String) -> bool:"
        }
      },
      {
        "similarity": 0.7333333333333333,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameStateManager.gd",
          "name": "_ready",
          "line": 29,
          "signature": "func _ready() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\SalesManager.gd",
          "name": "_ready",
          "line": 11,
          "signature": "func _ready() -> void:"
        }
      },
      {
        "similarity": 0.7305389221556886,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "set_production_manager",
          "line": 26,
          "signature": "func set_production_manager(manager: Node) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "set_sales_manager",
          "line": 23,
          "signature": "func set_sales_manager(manager: Node) -> void:"
        }
      },
      {
        "similarity": 0.721868365180467,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
          "name": "_on_timer_action",
          "line": 245,
          "signature": "func _on_timer_action(item_id: String, action: String) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
          "name": "_on_resource_action",
          "line": 196,
          "signature": "func _on_resource_action(item_id: String, action: String) -> void:"
        }
      },
      {
        "similarity": 0.71875,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CurrencyManager.gd",
          "name": "get_save_data",
          "line": 199,
          "signature": "func get_save_data() -> Dictionary:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd",
          "name": "get_save_data",
          "line": 285,
          "signature": "func get_save_data() -> Dictionary:"
        }
      },
      {
        "similarity": 0.716,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
          "name": "_on_product_action",
          "line": 250,
          "signature": "func _on_product_action(item_id: String, action: String) -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
          "name": "_on_stats_action",
          "line": 258,
          "signature": "func _on_stats_action(item_id: String, action: String) -> void:"
        }
      },
      {
        "similarity": 0.7071823204419889,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\OffersScene.gd",
          "name": "_setup_offer_timer",
          "line": 58,
          "signature": "func _setup_offer_timer() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GeneratorManager.gd",
          "name": "_setup_generation_timer",
          "line": 40,
          "signature": "func _setup_generation_timer() -> void:"
        }
      },
      {
        "similarity": 0.7028942705256941,
        "function1": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\DebugPersistence.gd",
          "name": "_check_save_file",
          "line": 36,
          "signature": "func _check_save_file() -> void:"
        },
        "function2": {
          "file": "E:\\GitHub\\bar-sik\\project\\scripts\\FinalSystemTest.gd",
          "name": "_test_manual_persistence",
          "line": 59,
          "signature": "func _test_manual_persistence(game_controller) -> void:"
        }
      }
    ],
    "similar_patterns": [],
    "unused_scripts": [],
    "complex_files": [
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameController.gd",
        "metrics": {
          "total_lines": 684,
          "code_lines": 416,
          "functions": 40,
          "classes": 0,
          "signals": 0,
          "properties": 0,
          "complexity_score": 121.6
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
        "metrics": {
          "total_lines": 473,
          "code_lines": 319,
          "functions": 21,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 76.9
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
        "metrics": {
          "total_lines": 473,
          "code_lines": 319,
          "functions": 21,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 76.9
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameManager.gd",
        "metrics": {
          "total_lines": 319,
          "code_lines": 168,
          "functions": 30,
          "classes": 0,
          "signals": 0,
          "properties": 0,
          "complexity_score": 76.8
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
        "metrics": {
          "total_lines": 458,
          "code_lines": 317,
          "functions": 21,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 76.7
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
        "metrics": {
          "total_lines": 442,
          "code_lines": 305,
          "functions": 21,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 75.5
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UpgradeManager.gd",
        "metrics": {
          "total_lines": 431,
          "code_lines": 296,
          "functions": 21,
          "classes": 0,
          "signals": 2,
          "properties": 0,
          "complexity_score": 73.6
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
        "metrics": {
          "total_lines": 376,
          "code_lines": 269,
          "functions": 21,
          "classes": 0,
          "signals": 2,
          "properties": 0,
          "complexity_score": 70.9
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\StockDisplayComponent.gd",
        "metrics": {
          "total_lines": 462,
          "code_lines": 319,
          "functions": 17,
          "classes": 0,
          "signals": 2,
          "properties": 6,
          "complexity_score": 67.9
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
        "metrics": {
          "total_lines": 381,
          "code_lines": 270,
          "functions": 18,
          "classes": 0,
          "signals": 2,
          "properties": 0,
          "complexity_score": 65.0
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\SaveSystem.gd",
        "metrics": {
          "total_lines": 287,
          "code_lines": 187,
          "functions": 22,
          "classes": 0,
          "signals": 0,
          "properties": 0,
          "complexity_score": 62.7
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\OffersComponent.gd",
        "metrics": {
          "total_lines": 320,
          "code_lines": 205,
          "functions": 16,
          "classes": 0,
          "signals": 2,
          "properties": 0,
          "complexity_score": 54.5
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd",
        "metrics": {
          "total_lines": 293,
          "code_lines": 205,
          "functions": 15,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 53.5
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\TabNavigator.gd",
        "metrics": {
          "total_lines": 203,
          "code_lines": 129,
          "functions": 18,
          "classes": 0,
          "signals": 4,
          "properties": 0,
          "complexity_score": 52.9
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
        "metrics": {
          "total_lines": 294,
          "code_lines": 194,
          "functions": 14,
          "classes": 0,
          "signals": 4,
          "properties": 0,
          "complexity_score": 51.400000000000006
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
        "metrics": {
          "total_lines": 304,
          "code_lines": 167,
          "functions": 16,
          "classes": 0,
          "signals": 2,
          "properties": 0,
          "complexity_score": 50.7
        }
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CurrencyManager.gd",
        "metrics": {
          "total_lines": 225,
          "code_lines": 131,
          "functions": 17,
          "classes": 0,
          "signals": 3,
          "properties": 0,
          "complexity_score": 50.1
        }
      }
    ],
    "dependencies": {
      "E:\\GitHub\\bar-sik\\project\\scripts\\Credits.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd": [
        {
          "type": "extends",
          "class": "BasePanel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\DebugGeneratorTest.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\DebugPersistence.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\FinalSystemTest.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\GameScene.gd": [
        {
          "type": "extends",
          "class": "GameController"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd": [
        {
          "type": "preload",
          "path": "res://scripts/ui/LayoutFixHelper.gd"
        },
        {
          "type": "extends",
          "class": "BasePanel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd": [
        {
          "type": "preload",
          "path": "res://scripts/ui/SimpleGridLayout.gd"
        },
        {
          "type": "extends",
          "class": "BasePanel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\OffersScene.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\PauseMenu.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd": [
        {
          "type": "extends",
          "class": "BasePanel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd": [
        {
          "type": "extends",
          "class": "BasePanel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\SettingsMenu.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ShopScene.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\SplashScreen.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\SystemRepairSummary.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\TabNavigator.gd": [
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "Router"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\TestGeneratorPersistence.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\TestGeneratorPricing.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\components\\OffersComponent.gd": [
        {
          "type": "extends",
          "class": "VBoxContainer"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\components\\StockDisplayComponent.gd": [
        {
          "type": "extends",
          "class": "VBoxContainer"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CurrencyManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "AppConfig"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CustomerManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameConfig.gd": [
        {
          "type": "extends",
          "class": "Resource"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameController.gd": [
        {
          "type": "preload",
          "path": "res://scenes/PauseMenu.tscn"
        },
        {
          "type": "preload",
          "path": "res://scripts/DebugGeneratorTest.gd"
        },
        {
          "type": "preload",
          "path": "res://scripts/SystemRepairSummary.gd"
        },
        {
          "type": "extends",
          "class": "Control"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        },
        {
          "type": "singleton",
          "name": "SaveSystem"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameData.gd": [
        {
          "type": "extends",
          "class": "Resource"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "SaveSystem"
        },
        {
          "type": "singleton",
          "name": "AppConfig"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameStateManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameUtils.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GeneratorManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ProductionManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "AppConfig"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\SalesManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UIComponentsFactory.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UITheme.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UpgradeManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "AppConfig"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BasePanel.gd": [
        {
          "type": "extends",
          "class": "ScrollContainer"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BeverageButton.gd": [
        {
          "type": "extends",
          "class": "Button"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\CurrencyDisplay.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\IdleBuyButton.gd": [
        {
          "type": "extends",
          "class": "VBoxContainer"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\LayoutFixHelper.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd": [
        {
          "type": "extends",
          "class": "Button"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\SimpleGridLayout.gd": [
        {
          "type": "extends",
          "class": "Control"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\UIStyleManager.gd": [
        {
          "type": "extends",
          "class": "RefCounted"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\BuyCard.gd": [
        {
          "type": "extends",
          "class": "Panel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\ItemListCard.gd": [
        {
          "type": "extends",
          "class": "Panel"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\ShopContainer.gd": [
        {
          "type": "preload",
          "path": "res://scenes/ui/components/BuyCard.tscn"
        },
        {
          "type": "extends",
          "class": "VBoxContainer"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\AppConfig.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "AppConfig"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\ComponentsPreloader.gd": [
        {
          "type": "preload",
          "path": "res://scenes/ui/components/ItemListCard.tscn"
        },
        {
          "type": "preload",
          "path": "res://scenes/ui/components/ShopContainer.tscn"
        },
        {
          "type": "preload",
          "path": "res://scenes/ui/components/BuyCard.tscn"
        },
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\GameEvents.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\GameManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\Locale.gd": [
        {
          "type": "extends",
          "class": "Node"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\Router.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "Router"
        },
        {
          "type": "singleton",
          "name": "SaveSystem"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\SaveSystem.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "GameEvents"
        },
        {
          "type": "singleton",
          "name": "SaveSystem"
        }
      ],
      "E:\\GitHub\\bar-sik\\project\\singletons\\StockManager.gd": [
        {
          "type": "extends",
          "class": "Node"
        },
        {
          "type": "singleton",
          "name": "StockManager"
        }
      ]
    },
    "signal_connections": [],
    "node_references": [],
    "debug_code": [
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameController.gd",
        "debug_lines": [
          {
            "line_number": 34,
            "content": "# Info de debugging sin breakpoints automáticos",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 43,
            "content": "# TEMPORAL: Debug del sistema de generación",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 43,
            "content": "# TEMPORAL: Debug del sistema de generación",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 46,
            "content": "add_to_group(\"game_controller\")  # Para que DebugGeneratorTest pueda encontrarnos",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 46,
            "content": "add_to_group(\"game_controller\")  # Para que DebugGeneratorTest pueda encontrarnos",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 48,
            "content": "# TEMPORAL: Resumen de reparaciones del sistema",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 56,
            "content": "## === DEBUGGING FUNCTIONS ===",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 60,
            "content": "func debug_game_info(location: String):",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 66,
            "content": "func debug_game_state():",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 77,
            "content": "func debug_pause_and_inspect(location: String, force: bool = false):",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 98,
            "content": "print(\"💾 Datos cargados del sistema de guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 100,
            "content": "print(\"🎯 Datos del juego configurados\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 126,
            "content": "print(\"📦 StockManager configurado con GameData\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 134,
            "content": "print(\"🏭 Managers configurados y conectados\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 147,
            "content": "print(\"🔄 GameStateManager configurado - Sistema reactivo activo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 208,
            "content": "print(\"📱 Sistema UI configurado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 213,
            "content": "print(\"🔧 _setup_panels iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 217,
            "content": "print(\"📦 Conectando GenerationPanel con GeneratorManager...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 219,
            "content": "print(\"✅ GeneratorManager conectado a GenerationPanel\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 225,
            "content": "print(\"✅ Señal generator_purchased reconectada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 227,
            "content": "print(\"⚠️ GenerationPanel no tiene método set_generator_manager o es null\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 231,
            "content": "print(\"🔧 Conectando ProductionPanel con ProductionManager...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 233,
            "content": "print(\"✅ ProductionManager conectado a ProductionPanel\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 253,
            "content": "print(\"💰 Conectando SalesPanel con SalesManager...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 255,
            "content": "print(\"✅ SalesManager conectado a SalesPanel\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 263,
            "content": "print(\"✅ Señal item_sell_requested conectada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 267,
            "content": "print(\"� Conectando CustomersPanel con CustomerManager...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 269,
            "content": "print(\"✅ CustomerManager conectado a CustomersPanel\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 279,
            "content": "print(\"✅ Señal autosell_upgrade_purchased conectada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 290,
            "content": "print(\"💾 Timer de guardado automático configurado (cada 10s)\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 342,
            "content": "print(\"✅ Generador comprado: %dx %s\" % [quantity, generator_id])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 348,
            "content": "print(\"🔄 Recurso generado: %dx %s\" % [amount, resource_type])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 356,
            "content": "print(\"✅ Estación comprada: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 361,
            "content": "print(\"🔓 Estación desbloqueada: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 366,
            "content": "print(\"🍺 Producido: %dx %s\" % [amount, product_type])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 373,
            "content": "print(\"💰 Vendido: %dx %s (%s) por $%.2f\" % [quantity, item_name, item_type, total_earned])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 383,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 393,
            "content": "print(\"⬆️ Upgrade de cliente: %s por $%.0f\" % [upgrade_id, cost])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 403,
            "content": "print(\"🛒 UI solicitó compra de generador: %s x%d\" % [generator_id, quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 408,
            "content": "print(\"🔄 Actualizando UI después de compra de generador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 412,
            "content": "print(\"❌ No se pudo completar la compra: %s x%d\" % [generator_id, quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 416,
            "content": "print(\"🏭 Procesando compra de estación: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 419,
            "content": "print(\"✅ Estación comprada: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 422,
            "content": "print(\"❌ No se pudo completar la compra de estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 433,
            "content": "print(\"💰 GameController recibió solicitud de venta:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 434,
            "content": "print(\"   - Item: %s (%s)\" % [item_name, item_type])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 435,
            "content": "print(\"   - Cantidad: %d\" % quantity)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 436,
            "content": "print(\"   - Llamando sales_manager.sell_item()...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 438,
            "content": "print(\"   - ✅ Venta procesada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 449,
            "content": "print(\"📱 Cambiado a pestaña: %s\" % tab_name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 453,
            "content": "print(\"⏸️ Botón pausa presionado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 457,
            "content": "print(\"▶️ Reanudando juego\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 465,
            "content": "print(\"⏸️ Juego pausado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 479,
            "content": "print(\"⏸️ Menú de pausa mostrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 483,
            "content": "print(\"🗑️ Resetear datos solicitado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 505,
            "content": "print(\"✅ Datos reseteados, paneles reconfigurados y guardados automáticamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 512,
            "content": "print(\"💾 Juego guardado automáticamente con encriptación\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 519,
            "content": "print(\"💾 Guardado inmediato realizado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 533,
            "content": "print(\"🛒 GameController - Oferta toggled:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 534,
            "content": "print(\"   - Estación: %d, Habilitada: %s\" % [station_index, enabled])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 540,
            "content": "print(\"   - ID de estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 545,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 549,
            "content": "print(\"   - ❌ ERROR: ID de estación no encontrado en ofertas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 553,
            "content": "print(\"💰 GameController - Configuración de precio solicitada:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 554,
            "content": "print(\"   - Estación: %d\" % station_index)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 562,
            "content": "print(\"   - ID de estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 563,
            "content": "print(\"   - Multiplicador actual: %.2f\" % current_multiplier)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 572,
            "content": "print(\"   - ✅ Nuevo multiplicador: %.2f\" % new_multiplier)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 581,
            "content": "print(\"🏪 GameController - Oferta toggled desde CustomersPanel:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 582,
            "content": "print(\"   - Estación ID: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 583,
            "content": "print(\"   - Habilitado: %s\" % enabled)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 588,
            "content": "print(\"   - ✅ Oferta actualizada en GameData\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 592,
            "content": "print(\"   - ✅ Paneles sincronizados\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 594,
            "content": "print(\"   - ❌ ERROR: Estación no encontrada en ofertas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 633,
            "content": "print(\"💰 GameController - Cambio de precio desde CustomersPanel:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 634,
            "content": "print(\"   - Estación ID: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 638,
            "content": "print(\"   - Multiplicador actual: %.2f\" % current_multiplier)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 650,
            "content": "print(\"   - ✅ Nuevo multiplicador: %.2f\" % new_multiplier)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 654,
            "content": "print(\"   - ✅ Paneles sincronizados\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 656,
            "content": "print(\"   - ❌ ERROR: Estación no encontrada en ofertas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 664,
            "content": "print(\"📦 Stock actualizado: %s %s = %d\" % [item_type, item_name, new_quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 672,
            "content": "print(\"✅ GenerationPanel actualizado con nuevo stock de %s\" % item_name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 683,
            "content": "print(\"✅ SalesPanelBasic actualizado con nuevo stock de %s\" % item_name)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 83
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\FinalSystemTest.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "## FinalSystemTest - Test completo del sistema reparado",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 6,
            "content": "print(\"\\n🎯 === TEST FINAL DEL SISTEMA REPARADO ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 15,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 18,
            "content": "print(\"✅ GameController encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 20,
            "content": "# Test 1: Verificar sistema de precios escalados",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 23,
            "content": "# Test 2: Verificar persistencia manual",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 26,
            "content": "# Test 3: Verificar generación en tiempo real",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 30,
            "content": "func _test_pricing_system(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 31,
            "content": "print(\"\\n💰 TEST 1: Sistema de precios escalados\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 37,
            "content": "print(\"💰 Dinero inicial: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 39,
            "content": "# Test de water_collector (precio base 10)",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 43,
            "content": "print(\"🏭 %s - Cantidad actual: %d\" % [generator_id, owned])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 48,
            "content": "print(\"  Compra #%d: $%.2f\" % [i + 1, cost])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 50,
            "content": "# Simular compra temporal para el siguiente cálculo",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 56,
            "content": "print(\"🔄 Estado restaurado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 59,
            "content": "func _test_manual_persistence(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 60,
            "content": "print(\"\\n💾 TEST 2: Persistencia manual\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 69,
            "content": "print(\"✅ Archivo de guardado existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 80,
            "content": "print(\"💰 Dinero guardado: %.2f\" % game_data.get(\"money\", 0))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 81,
            "content": "print(\"🏭 Generadores guardados: %s\" % game_data.get(\"generators\", {}))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 83,
            "content": "print(\"❌ Error al parsear archivo guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 85,
            "content": "print(\"❌ No se pudo leer archivo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 87,
            "content": "print(\"❌ No existe archivo de guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 90,
            "content": "func _test_realtime_generation(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 91,
            "content": "print(\"\\n⚡ TEST 3: Generación en tiempo real\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 99,
            "content": "print(\"✅ Timer existe - Activo: %s\" % is_active)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 100,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 107,
            "content": "print(\"❌ Timer no existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 110,
            "content": "print(\"🏭 Generadores que pueden generar:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 114,
            "content": "print(\"  %s: %d unidades\" % [gen_id, count])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 116,
            "content": "print(\"\\n🎯 === PROBLEMAS IDENTIFICADOS Y CORREGIDOS ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 117,
            "content": "print(\"✅ Error 'int' vs 'String' en SalesPanel - ARREGLADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 118,
            "content": "print(\"✅ Precios escalados usando GeneratorManager - ARREGLADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 119,
            "content": "print(\"✅ Reset automático al iniciar - DESACTIVADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 120,
            "content": "print(\"✅ GenerationPanel usa cálculos consistentes - IMPLEMENTADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 121,
            "content": "print(\"🔍 Pendiente: Verificar que UI actualiza precios después de compra\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 122,
            "content": "print(\"🔍 Pendiente: Confirmar persistencia después de reset manual\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 37
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\TestGeneratorPersistence.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "## TestGeneratorPersistence - Test para verificar persistencia de generadores",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 6,
            "content": "print(\"\\n🧪 === TEST DE PERSISTENCIA DE GENERADORES ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 11,
            "content": "print(\"🔍 Ejecutando test de persistencia...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 19,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"✅ GameController encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 24,
            "content": "# Test 1: Estado inicial",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 27,
            "content": "# Test 2: Comprar generador",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 30,
            "content": "# Test 3: Esperar generación",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 33,
            "content": "# Test 4: Reset y verificar (DESACTIVADO para evitar reset automático)",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 34,
            "content": "# await _test_reset_and_verify(game_controller)",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 35,
            "content": "print(\"🔧 Test de reset desactivado para evitar reset automático\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "func _test_initial_state(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 39,
            "content": "print(\"\\n📊 TEST 1: Estado inicial\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 41,
            "content": "print(\"💰 Dinero inicial: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"📦 Recursos iniciales: %s\" % game_data.resources)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 43,
            "content": "print(\"🏭 Generadores iniciales: %s\" % game_data.generators)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 46,
            "content": "func _test_buy_generator(game_controller) -> bool:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 47,
            "content": "print(\"\\n🛒 TEST 2: Comprar generador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 54,
            "content": "print(\"✅ Generador comprado exitosamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 55,
            "content": "print(\"💰 Dinero después: %.2f\" % game_controller.game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 56,
            "content": "print(\"🏭 Generadores después: %s\" % game_controller.game_data.generators)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 59,
            "content": "print(\"❌ Fallo al comprar generador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 63,
            "content": "func _test_wait_generation(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 64,
            "content": "print(\"\\n⏰ TEST 3: Esperando generación (5 segundos)...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "print(\"💧 Agua inicial: %d\" % initial_water)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 73,
            "content": "print(\"💧 Agua después de 5s: %d\" % final_water)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 76,
            "content": "print(\"✅ ¡Generación funcionando!\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 78,
            "content": "print(\"❌ Generación NO funcionando\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 81,
            "content": "func _test_reset_and_verify(game_controller) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 82,
            "content": "print(\"\\n🗑️ TEST 4: Reset y verificación\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 94,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 100,
            "content": "print(\"🏭 Generadores antes: %s\" % before_generators)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 101,
            "content": "print(\"🏭 Generadores después: %s\" % game_controller.game_data.generators)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 106,
            "content": "print(\"✅ Timer de generación sigue activo después del reset\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 108,
            "content": "print(\"❌ Timer de generación roto después del reset\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 110,
            "content": "print(\"🧪 === FIN DEL TEST ===\\n\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 36
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SystemRepairSummary.gd",
        "debug_lines": [
          {
            "line_number": 6,
            "content": "print(\"\\n🔧 === RESUMEN DE REPARACIONES DEL SISTEMA ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 13,
            "content": "print(\"✅ PROBLEMAS CORREGIDOS:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 14,
            "content": "print(\"  1. Error 'int' vs 'String' en SalesPanel - ARREGLADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 15,
            "content": "print(\"  2. Señales ya conectadas en reset - VERIFICACIONES AGREGADAS\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 16,
            "content": "print(\"  3. Botones de venta ahora HORIZONTALES - CAMBIADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 17,
            "content": "print(\"  4. Agua ELIMINADA de productos vendibles - REMOVIDA\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 18,
            "content": "print(\"  5. Límites máximos de recursos - IMPLEMENTADOS\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 19,
            "content": "print(\"  6. Sistema de botones idle estándar - IMPLEMENTADO\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 20,
            "content": "print(\"  7. Precios escalados exponenciales - CORREGIDOS\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"\\n📊 NUEVAS CARACTERÍSTICAS:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 23,
            "content": "print(\"  🔘 IdleBuyButton: Un botón principal + multiplicador rotativo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 24,
            "content": "print(\"  📦 Límites de recursos: barley(100), hops(100), water(50), yeast(25)\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 25,
            "content": "print(\"  💰 Precios escalados: x1.15 exponencial por cada generador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 26,
            "content": "print(\"  🚫 Agua no vendible: Solo barley, hops, yeast se pueden vender\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 28,
            "content": "print(\"\\n🎮 FUNCIONAMIENTO ESPERADO:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 29,
            "content": "print(\"  • Click botón principal → comprar con multiplicador actual\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 30,
            "content": "print(\"  • Click botón multiplicador → rotar x1→x5→x10→x25→x1\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 31,
            "content": "print(\"  • Precio mostrado = costo_base × multiplicador × escalado_exponencial\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 32,
            "content": "print(\"  • Recursos se llenan hasta límite máximo, luego pausan generación\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "func _test_new_systems() -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 39,
            "content": "print(\"\\n🧪 TESTEANDO NUEVOS SISTEMAS...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 43,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 48,
            "content": "# Test 1: Verificar límites máximos",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 49,
            "content": "print(\"\\n📦 Límites máximos configurados:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 53,
            "content": "print(\"  %s: %d/%d\" % [resource, current, limit])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 55,
            "content": "# Test 2: Verificar que agua no sea vendible",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 56,
            "content": "print(\"\\n🚫 Verificando agua no vendible:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 61,
            "content": "print(\"  ✅ Agua no tiene precio de venta\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 63,
            "content": "print(\"  ❌ Agua aún tiene precio: $%.2f\" % water_price)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 65,
            "content": "print(\"\\n🎯 === SISTEMA LISTO PARA PROBAR ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 66,
            "content": "print(\"Ahora puedes probar:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "print(\"1. Los botones de compra con multiplicador rotativo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 68,
            "content": "print(\"2. Los precios escalados correctamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 69,
            "content": "print(\"3. La generación con límites máximos\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 70,
            "content": "print(\"4. La venta con botones horizontales (sin agua)\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 35
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\DebugPersistence.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "## DebugPersistence - Debug manual de persistencia sin resets automáticos",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 6,
            "content": "print(\"\\n🛠️ === DEBUG PERSISTENCIA MANUAL ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 10,
            "content": "func _debug_save_load() -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 15,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 18,
            "content": "print(\"✅ GameController encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 28,
            "content": "print(\"\\n📊 ESTADO ACTUAL:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 30,
            "content": "print(\"💰 Dinero: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 31,
            "content": "print(\"📦 Recursos: %s\" % game_data.resources)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 32,
            "content": "print(\"🏭 Generadores: %s\" % game_data.generators)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 33,
            "content": "print(\"🏢 Estaciones: %s\" % game_data.stations)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 37,
            "content": "print(\"\\n💾 VERIFICANDO ARCHIVO DE GUARDADO:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 41,
            "content": "print(\"✅ Archivo de guardado existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 53,
            "content": "print(\"✅ Archivo parseado correctamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 54,
            "content": "print(\"🕒 Timestamp: %s\" % data.get(\"timestamp\", \"N/A\"))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 55,
            "content": "print(\"📋 Versión: %s\" % data.get(\"version\", \"N/A\"))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 58,
            "content": "print(\"💰 Dinero guardado: %.2f\" % game_data.get(\"money\", 0))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 59,
            "content": "print(\"📦 Recursos guardados: %s\" % game_data.get(\"resources\", {}))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 60,
            "content": "print(\"🏭 Generadores guardados: %s\" % game_data.get(\"generators\", {}))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 62,
            "content": "print(\"❌ Error al parsear archivo: %d\" % parse_result)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 64,
            "content": "print(\"❌ No se pudo abrir archivo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 66,
            "content": "print(\"❌ No existe archivo de guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 69,
            "content": "# Función manual para testear guardado",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 70,
            "content": "func test_manual_save() -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 73,
            "content": "print(\"\\n💾 TESTEANDO GUARDADO MANUAL...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 79,
            "content": "# Función manual para testear reset SIN ejecutarlo",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 81,
            "content": "print(\"\\n🗑️ INFO DE RESET (sin ejecutar):\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 82,
            "content": "print(\"  Para testear reset manualmente, usa:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 83,
            "content": "print(\"  get_tree().get_first_node_in_group('game_controller')._on_reset_data_requested()\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 28
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\TestGeneratorPricing.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "## TestGeneratorPricing - Test manual para verificar precios escalados",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 6,
            "content": "print(\"\\n💰 === TEST DE PRECIOS ESCALADOS ===\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 10,
            "content": "func _test_pricing() -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 15,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 21,
            "content": "print(\"✅ Testeando precios escalados...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 23,
            "content": "# Test para water_collector",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 25,
            "content": "print()",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 27,
            "content": "# Test para barley_farm",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 31,
            "content": "func _test_generator_pricing(gen_manager, game_data, generator_id: String) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 32,
            "content": "print(\"🏭 Testeando generador: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"❌ No se encontró definición para %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 45,
            "content": "print(\"💲 Precio base: %.2f\" % generator_def.base_cost)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 49,
            "content": "print(\"🏭 Cantidad actual: %d\" % owned)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 54,
            "content": "print(\"  Compra #%d: $%.2f (si tuviera %d)\" % [i + 1, cost, owned + i])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 59,
            "content": "# Temporalmente ajustar el owned para el siguiente cálculo",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 64,
            "content": "print(\"🔄 Estado restaurado a %d generadores\" % owned)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "# Función para testear compra real",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 68,
            "content": "func test_real_purchase(generator_id: String, quantity: int = 1) -> void:",
            "pattern": "func.*test_"
          },
          {
            "line_number": 71,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 77,
            "content": "print(\"\\n🛒 COMPRA REAL: %dx %s\" % [quantity, generator_id])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 78,
            "content": "print(\"💰 Dinero antes: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 79,
            "content": "print(\"🏭 Generadores antes: %d\" % game_data.generators.get(generator_id, 0))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 82,
            "content": "print(\"💲 Costo calculado: %.2f\" % cost)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 87,
            "content": "print(\"✅ Compra exitosa!\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 88,
            "content": "print(\"💰 Dinero después: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 89,
            "content": "print(\"🏭 Generadores después: %d\" % game_data.generators.get(generator_id, 0))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 91,
            "content": "print(\"❌ Compra falló!\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 27
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\DebugGeneratorTest.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "## DebugGeneratorTest - Herramienta temporal para diagnosticar generación",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 2,
            "content": "## DebugGeneratorTest - Herramienta temporal para diagnosticar generación",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 2,
            "content": "## DebugGeneratorTest - Herramienta temporal para diagnosticar generación",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 3,
            "content": "## Solo para debug, eliminar después",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 10,
            "content": "print(\"🔍 DebugGeneratorTest iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 20,
            "content": "func _debug_check_generation() -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 22,
            "content": "print(\"\\n🔍 === DEBUG CHECK #%d ===\" % test_counter)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"\\n🔍 === DEBUG CHECK #%d ===\" % test_counter)",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 27,
            "content": "print(\"❌ No se encontró GameController\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 32,
            "content": "print(\"❌ No hay game_data\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 35,
            "content": "print(\"💰 Dinero actual: %.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 36,
            "content": "print(\"📦 Recursos actuales:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "print(\"   %s: %d\" % [resource_name, game_data.resources[resource_name]])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 40,
            "content": "print(\"🏭 Generadores comprados:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"   %s: %d\" % [gen_id, game_data.generators[gen_id]])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 47,
            "content": "print(\"✅ GeneratorManager existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 49,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 52,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 62,
            "content": "print(\"❌ Timer de generación NO existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 64,
            "content": "print(\"❌ GeneratorManager NO existe\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 66,
            "content": "print(\"=== FIN DEBUG CHECK ===\\n\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 21
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\ShopContainer.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "# class_name ShopContainer  # Comentado temporalmente para evitar conflictos RefCounted",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 16,
            "content": "var buy_cards: Array[Panel] = []  # Cambiado de BuyCard a Panel temporalmente",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 47,
            "content": "print(\"🛍️ ShopContainer inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 55,
            "content": "print(\"⚠️ ShopContainer: title_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 58,
            "content": "print(\"⚠️ ShopContainer: item_grid no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 61,
            "content": "print(\"⚠️ ShopContainer: total_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 64,
            "content": "print(\"⚠️ ShopContainer: affordability_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "print(\"⚠️ ShopContainer: quantity_input no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 70,
            "content": "print(\"⚠️ ShopContainer: buy_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 73,
            "content": "print(\"⚠️ ShopContainer: x1_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 76,
            "content": "print(\"⚠️ ShopContainer: x5_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 79,
            "content": "print(\"⚠️ ShopContainer: x10_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 82,
            "content": "print(\"⚠️ ShopContainer: x25_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 85,
            "content": "print(\"⚠️ ShopContainer: x50_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 97,
            "content": "print(\"⚠️ ShopContainer: Los nodos no están listos, reintentando verificación...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 101,
            "content": "print(\"❌ ShopContainer: No se puede configurar, nodos faltantes\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 186,
            "content": "print(\"⚠️ ShopContainer: Nodos no listos en _setup_quantity_buttons\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 214,
            "content": "print(\"⚠️ ShopContainer: title_label no disponible en _update_ui_for_mode\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 226,
            "content": "print(\"⚠️ ShopContainer: Nodos no listos en _update_status_bar\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 264,
            "content": "print(\"🔢 Cantidad global actualizada: x%d\" % quantity)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 20
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GeneratorManager.gd",
        "debug_lines": [
          {
            "line_number": 51,
            "content": "print(\"🏭 GeneratorManager: GameData asignado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 60,
            "content": "print(\"❌ Timer de generación perdido, recreando...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 63,
            "content": "print(\"⚠️ Timer de generación detenido, reiniciando...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 66,
            "content": "print(\"✅ Timer de generación funcionando correctamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 72,
            "content": "print(\"⚠️ GeneratorManager: game_data no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 76,
            "content": "print(\"❌ GeneratorManager: StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 79,
            "content": "print(\"🔄 GeneratorManager: Ejecutando ciclo de generación...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 94,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 113,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 120,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 128,
            "content": "print(\"📦 Total generado este ciclo: %d recursos\" % total_generated)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 130,
            "content": "print(\"💤 No hay generadores activos para generar recursos\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 135,
            "content": "print(\"🛒 GeneratorManager: Intentando comprar %dx %s\" % [quantity, generator_id])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 138,
            "content": "print(\"❌ No hay game_data disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 143,
            "content": "print(\"❌ Generador %s no encontrado\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 148,
            "content": "print(\"💰 Costo calculado: $%.2f (dinero actual: $%.2f)\" % [total_cost, game_data.money])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 151,
            "content": "print(\"❌ Dinero insuficiente para comprar %dx %s\" % [quantity, generator_id])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 158,
            "content": "print(\"✅ Compra exitosa: %dx %s (nuevo total: %d)\" % [quantity, generator_id, owned + quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 163,
            "content": "print(\"🎓 Tutorial: Primera compra post-agua completada!\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 19
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\SaveSystem.gd",
        "debug_lines": [
          {
            "line_number": 14,
            "content": "print(\"💾 SaveSystem inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 54,
            "content": "print(\"💾 Juego guardado con encriptación - checksum: %s\" % save_data.checksum)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 57,
            "content": "print(\"❌ Error al guardar archivo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 68,
            "content": "print(\"📁 No existe archivo de guardado, devolviendo datos por defecto\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 73,
            "content": "print(\"❌ Error al abrir archivo de guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 86,
            "content": "print(\"⚠️ Error al cargar guardado, intentando backups...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 93,
            "content": "print(\"⚠️ Checksum no coincide, archivo modificado, intentando backup...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 97,
            "content": "print(\"📁 Datos cargados exitosamente - checksum válido\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 146,
            "content": "print(\"🔄 Intentando cargar backups...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 153,
            "content": "print(\"🔄 Intentando backup %d: %s\" % [i + 1, backup_path])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 172,
            "content": "print(\"✅ Backup %d cargado exitosamente\" % [i + 1])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 175,
            "content": "print(\"� Todos los backups fallaron, usando datos por defecto\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 196,
            "content": "print(\"💾 Guardado solicitado por evento\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 254,
            "content": "print(\"💾 Guardando al cerrar aplicación...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 261,
            "content": "print(\"🗑️ Reseteando datos a valores por defecto...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 264,
            "content": "print(\"✅ Datos reseteados exitosamente con encriptación\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 278,
            "content": "print(\"💾 Creando nuevo slot: \", slot_name if slot_name != \"\" else \"Sin nombre\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 284,
            "content": "print(\"🔄 Cambiando a slot: \", slot_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 18
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\CustomersPanel.gd",
        "debug_lines": [
          {
            "line_number": 11,
            "content": "# Componentes modulares - DESACTIVADOS TEMPORALMENTE",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 26,
            "content": "print(\"🔗 CustomersPanel conectado con CustomerManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 39,
            "content": "print(\"✅ CustomersPanel inicializado con componentes modulares\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 58,
            "content": "print(\"⚠️ CustomersPanel: _setup_modular_timers desactivado temporalmente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 73,
            "content": "print(\"⚠️ CustomersPanel: _setup_modular_upgrades desactivado temporalmente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 125,
            "content": "print(\"⚠️ CustomersPanel: _setup_modular_automation desactivado temporalmente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 163,
            "content": "print(\"🔄 Actualizando datos de clientes: %d activos, satisfacción: %.1f%%\" % [",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 249,
            "content": "print(\"⚙️ Configurar timer: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 252,
            "content": "print(\"⚠️ Acción no reconocida para timer: \", action)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 257,
            "content": "print(\"💎 Compra de upgrade: %s x%d por $%.2f\" % [item_id, quantity, total_cost])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 270,
            "content": "print(\"🔄 Toggle automatización: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 276,
            "content": "print(\"📊 Estado automatización %s: %s → %s\" % [item_id, is_active, not is_active])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 278,
            "content": "print(\"⚠️ Acción no reconocida para automatización: \", action)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 292,
            "content": "print(\"🔄 Display de clientes actualizado con progreso: %.1f%%\" % (timer_progress * 100))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 301,
            "content": "print(\"🔄 Interfaces de ofertas actualizadas: %d ofertas\" % offers.size())",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 15
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanelBasic.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"💰 SalesPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 23,
            "content": "print(\"✅ SalesPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 54,
            "content": "print(\"⏰ Timer de actualización configurado (cada 1s)\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 60,
            "content": "# print(\"🔄 Inventario actualizado automáticamente\")  # Comentado para no spam",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 206,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 212,
            "content": "print(\"💰 Solicitando venta: %s (%s) x%d\" % [item_id, item_type, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 218,
            "content": "print(\"⚠️ Update en progreso, ignorando cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 222,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 233,
            "content": "print(\"🔢 Multiplicador cambiado para %s: x%d\" % [item_id, next_multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 240,
            "content": "print(\"✅ Botón actualizado inmediatamente después del cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 255,
            "content": "print(\"🔗 SalesPanelBasic conectado con SalesManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 259,
            "content": "print(\"▶️ Timer de actualización activado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 301,
            "content": "print(\"⚠️ Estado del botón no inicializado para: %s\" % item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 376,
            "content": "print(\"▶️ Timer reactivado - panel visible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 380,
            "content": "print(\"⏸️ Timer pausado - panel no visible\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 15
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\LayoutFixHelper.gd",
        "debug_lines": [
          {
            "line_number": 5,
            "content": "# class_name LayoutFixHelper  # Comentado temporalmente para evitar conflictos RefCounted",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 40,
            "content": "print(\"🛍️ LayoutFix: ShopContainer configurado con layout responsivo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 50,
            "content": "print(\"🃏 LayoutFix: Card configurado con layout responsivo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 62,
            "content": "print(\"📱 VBoxContainer configurado con separación vertical para mobile\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "print(\"📱 Aplicando layout vertical para mobile en HBoxContainer\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 79,
            "content": "print(\"📱 Container genérico configurado para layout responsive\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 105,
            "content": "print(\"🔄 LayoutFix: Layout actualizado forzadamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 108,
            "content": "## Debug: Mostrar información de un componente",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 109,
            "content": "static func debug_component_layout(component: Control, name: String = \"Component\") -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 114,
            "content": "print(\"🐛 LayoutFix Debug: %s\" % name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 115,
            "content": "print(\"   Size: %s\" % str(component.size))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 116,
            "content": "print(\"   Position: %s\" % str(component.position))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 117,
            "content": "print(\"   Custom min size: %s\" % str(component.custom_minimum_size))",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 118,
            "content": "print(\"   Size flags H: %d, V: %d\" % [",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 14
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelBasic.gd",
        "debug_lines": [
          {
            "line_number": 18,
            "content": "print(\"🎯 GenerationPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 20,
            "content": "print(\"✅ GenerationPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 206,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 211,
            "content": "print(\"🔘 Botón de generador presionado: %s x%d\" % [generator_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 217,
            "content": "print(\"⚠️ Update en progreso, ignorando cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 221,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 232,
            "content": "print(\"🔢 Multiplicador cambiado para %s: x%d\" % [generator_id, next_multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 239,
            "content": "print(\"✅ Botón actualizado inmediatamente después del cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 254,
            "content": "print(\"🔗 GenerationPanelBasic conectado con GeneratorManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 307,
            "content": "print(\"⚠️ Estado del botón no inicializado para: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 326,
            "content": "# DEBUG: Mostrar información de cálculo de costos",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 327,
            "content": "print(\"🔍 DEBUG BOTÓN %s: dinero=%.1f, multiplicador=%d, costo_unitario=%.1f\" % [",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 330,
            "content": "print(\"🔍   costo_total=%.1f, puede_costear=%s\" % [total_cost, can_afford])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 13
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"🏭 ProductionPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"✅ ProductionPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 255,
            "content": "print(\"⚠️ Update en progreso, ignorando click\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 259,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 265,
            "content": "print(\"🏭 Botón de estación presionado: %s (x%d)\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 270,
            "content": "print(\"⚙️ Señal production_requested emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 273,
            "content": "print(\"🛒 Señal station_purchased emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 281,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 292,
            "content": "print(\"🔢 Multiplicador cambiado para %s: x%d\" % [station_id, next_multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 299,
            "content": "print(\"✅ Botón actualizado inmediatamente después del cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 316,
            "content": "print(\"🔗 ProductionPanelBasic conectado con ProductionManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 360,
            "content": "print(\"❌ Estado no encontrado para estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 12
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_NEW.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"🏭 ProductionPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"✅ ProductionPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 255,
            "content": "print(\"⚠️ Update en progreso, ignorando click\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 259,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 265,
            "content": "print(\"🏭 Botón de estación presionado: %s (x%d)\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 270,
            "content": "print(\"⚙️ Señal production_requested emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 273,
            "content": "print(\"🛒 Señal station_purchased emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 281,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 292,
            "content": "print(\"🔢 Multiplicador cambiado para %s: x%d\" % [station_id, next_multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 299,
            "content": "print(\"✅ Botón actualizado inmediatamente después del cambio de multiplicador\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 316,
            "content": "print(\"🔗 ProductionPanelBasic conectado con ProductionManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 360,
            "content": "print(\"❌ Estado no encontrado para estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 12
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanel.gd",
        "debug_lines": [
          {
            "line_number": 28,
            "content": "print(\"🔗 ProductionPanel conectado con ProductionManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 41,
            "content": "print(\"✅ ProductionPanel inicializado con componentes modulares\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 207,
            "content": "print(\"🔄 Actualizando interfaces de estaciones con %d definiciones\" % [",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 254,
            "content": "print(\"📊 Ver estadísticas de producto: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 257,
            "content": "print(\"⚠️ Acción no reconocida para producto: \", action)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 262,
            "content": "print(\"🏭 Compra de estación solicitada: %s x%d por $%.2f\" % [item_id, quantity, total_cost])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 271,
            "content": "print(\"⚠️ Estación no encontrada: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 278,
            "content": "print(\"🔄 Toggle receta: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 287,
            "content": "print(\"⏸️ Pausando receta: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 290,
            "content": "print(\"▶️ Activando receta: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 293,
            "content": "print(\"⚠️ Acción no reconocida para receta: \", action)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 11
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CurrencyManager.gd",
        "debug_lines": [
          {
            "line_number": 26,
            "content": "print(\"💰 CurrencyManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 28,
            "content": "# Dar algo de dinero inicial para testing",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 51,
            "content": "print(\"💰 \", currencies[currency_type].name, \": \", old_amount, \" → \", new_amount)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 74,
            "content": "print(\"💸 Gastado \", amount, \" \", currencies[currency_type].name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 106,
            "content": "print(\"✅ Compra realizada: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 162,
            "content": "print(\"🍹 Vendido \", quantity, \"x \", beverage_id, \" por \", final_price, \" cash\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 178,
            "content": "print(\"🔄 Monedas reseteadas para prestigio\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 218,
            "content": "## Debug: Añadir monedas de testing",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 218,
            "content": "## Debug: Añadir monedas de testing",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 219,
            "content": "func debug_add_currencies() -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 224,
            "content": "print(\"🧪 Monedas de debug añadidas\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 11
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\SalesManager.gd",
        "debug_lines": [
          {
            "line_number": 12,
            "content": "print(\"💰 SalesManager inicializado - Sistema modular\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"� SalesManager.sell_item() - Sistema modular:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 23,
            "content": "print(\"   - Tipo: %s, Item: %s, Cantidad: %d\" % [item_type, item_name, quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 26,
            "content": "print(\"❌ ERROR: game_data es null\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 30,
            "content": "print(\"❌ ERROR: StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 35,
            "content": "print(\"   - Stock disponible: %d\" % available_stock)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "print(\"❌ No hay stock disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 43,
            "content": "print(\"   - Vendiendo: %d unidades\" % actual_quantity)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 48,
            "content": "print(\"   - Precio unitario: $%.2f, Total: $%.2f\" % [price, total_earned])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 53,
            "content": "print(\"❌ ERROR: No se pudo remover stock\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 63,
            "content": "print(\"   - ✅ Venta completada. Dinero: $%.2f\" % game_data.money)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 11
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_backup.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"🏭 ProductionPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"✅ ProductionPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 238,
            "content": "print(\"🔗 ProductionPanelBasic conectado con ProductionManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 290,
            "content": "print(\"❌ Estado no encontrado para estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 429,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 435,
            "content": "print(\"🏭 Botón de estación presionado: %s (x%d)\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 440,
            "content": "print(\"⚙️ Señal production_requested emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 443,
            "content": "print(\"🛒 Señal station_purchased emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 451,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 472,
            "content": "print(\"🔄 Multiplicador cambiado: %s x%d\" % [station_id, state.multiplier])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 10
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ProductionPanelBasic_fixed.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"🏭 ProductionPanelBasic _ready() iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"✅ ProductionPanelBasic inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 238,
            "content": "print(\"🔗 ProductionPanelBasic conectado con ProductionManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 290,
            "content": "print(\"❌ Estado no encontrado para estación: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 429,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 435,
            "content": "print(\"🏭 Botón de estación presionado: %s (x%d)\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 440,
            "content": "print(\"⚙️ Señal production_requested emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 443,
            "content": "print(\"🛒 Señal station_purchased emitida: %s x%d\" % [station_id, multiplier])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 451,
            "content": "print(\"❌ Estado del botón no encontrado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 472,
            "content": "print(\"🔄 Multiplicador cambiado: %s x%d\" % [station_id, state.multiplier])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 10
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\ItemListCard.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "# class_name ItemListCard  # Comentado temporalmente para evitar conflictos RefCounted",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 31,
            "content": "print(\"⚠️ ItemListCard: action_button no encontrado en _ready\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 39,
            "content": "print(\"⚠️ ItemListCard: name_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"⚠️ ItemListCard: amount_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 45,
            "content": "print(\"⚠️ ItemListCard: description_label no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 48,
            "content": "print(\"⚠️ ItemListCard: action_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 62,
            "content": "print(\"⚠️ ItemListCard: Los nodos no están listos, reintentando verificación...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 66,
            "content": "print(\"❌ ItemListCard: No se pueden configurar los datos, nodos faltantes\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 127,
            "content": "print(\"⚠️ ItemListCard: action_button no encontrado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 146,
            "content": "print(\"🎯 Acción '%s' solicitada para: %s\" % [action, item_id])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 10
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\GameManager.gd",
        "debug_lines": [
          {
            "line_number": 26,
            "content": "print(\"🌐 GameManager: Managers registrados globalmente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 58,
            "content": "print(\"💰 Quick-sell: %dx %s por $%.2f\" % [quantity, product_name, earned])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 68,
            "content": "## === DEBUG Y DESARROLLO ===",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 70,
            "content": "func debug_add_money(amount: float) -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 73,
            "content": "print(\"🐛 DEBUG: Añadido $%.0f (Total: $%.0f)\" % [amount, game_data.money])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 75,
            "content": "func debug_add_resources(resource_name: String, amount: int) -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 78,
            "content": "print(\"🐛 DEBUG: Añadido %dx %s (usando StockManager)\" % [amount, resource_name])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 80,
            "content": "print(\"❌ DEBUG: GameManager o StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 82,
            "content": "func debug_unlock_all_stations() -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 86,
            "content": "print(\"🐛 DEBUG: Todas las estaciones desbloqueadas\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 10
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\Router.gd",
        "debug_lines": [
          {
            "line_number": 20,
            "content": "print(\"🧭 Router inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 39,
            "content": "print(\"🔄 Cambiando a escena: \", scene_path)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 63,
            "content": "print(\"🔍 Rutas disponibles en SCENES:\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 65,
            "content": "print(\"  \" + key + \" -> \" + SCENES[key])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 77,
            "content": "print(\"✅ Escena cargada exitosamente\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 102,
            "content": "## Salir del juego (con confirmación en debug)",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 104,
            "content": "print(\"🚪 Saliendo del juego...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 111,
            "content": "print(\"🗑️ Reseteando datos de guardado...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 120,
            "content": "print(\"💾 Creando nuevo slot de guardado...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 127,
            "content": "print(\"🔄 Cambiando a slot de guardado: \", slot_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 10
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SalesPanel.gd",
        "debug_lines": [
          {
            "line_number": 25,
            "content": "print(\"🔗 SalesPanel conectado con SalesManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "print(\"✅ SalesPanel inicializado con componentes modulares\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 201,
            "content": "print(\"🔄 Actualizando datos de ventas: $%.2f total, %d recientes\" % [",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 235,
            "content": "print(\"🔄 Interfaces de venta actualizadas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 248,
            "content": "print(\"💰 Venta de producto: %s x%d por $%.2f\" % [item_id, quantity, total_income])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 254,
            "content": "print(\"🌿 Venta de ingrediente: %s x%d por $%.2f\" % [item_id, quantity, total_income])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 262,
            "content": "print(\"📊 Ver detalles de estadística: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 265,
            "content": "print(\"⚠️ Acción no reconocida para estadística: \", action)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 8
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\CustomerManager.gd",
        "debug_lines": [
          {
            "line_number": 4,
            "content": "## Sistema de autoventa con upgrades y temporizadores",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 48,
            "content": "print(\"👥 CustomerManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 114,
            "content": "print(\"❌ StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 135,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 143,
            "content": "print(\"❌ No hay productos con ofertas habilitadas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 164,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 177,
            "content": "print(\"❌ ERROR: No se pudo remover stock para venta automática\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 186,
            "content": "print(",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 8
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameStateManager.gd",
        "debug_lines": [
          {
            "line_number": 30,
            "content": "print(\"🔄 GameStateManager inicializado - Sistema reactivo activo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 44,
            "content": "print(\"📱 GameStateManager - Referencias de paneles configuradas\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 137,
            "content": "## === FUNCIONES DE DEBUG ===",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 140,
            "content": "func debug_print_state() -> void:",
            "pattern": "func.*debug_"
          },
          {
            "line_number": 143,
            "content": "print(\"💰 Dinero: %s\" % cached_money)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 144,
            "content": "print(\"📦 Recursos: %s\" % cached_resources.size())",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 145,
            "content": "print(\"🏭 Generadores: %s\" % cached_generators.size())",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 146,
            "content": "print(\"🏢 Estaciones: %s\" % cached_stations.size())",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 8
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanel.gd",
        "debug_lines": [
          {
            "line_number": 26,
            "content": "print(\"🔗 GenerationPanel conectado con GeneratorManager\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 38,
            "content": "print(\"✅ GenerationPanel inicializado con componentes modulares\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 192,
            "content": "print(\"🔄 Actualizando displays con %d definiciones de generadores\" % generator_definitions.size())",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 200,
            "content": "print(\"👁️ Ver detalles de recurso: \", item_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 203,
            "content": "print(\"⚠️ Acción no reconocida para recurso: \", action)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 208,
            "content": "print(\"🛒 Compra solicitada: %s x%d por $%.2f\" % [item_id, quantity, total_cost])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 217,
            "content": "print(\"⚠️ Generador no encontrado: \", item_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 7
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GenerationPanelSimple.gd",
        "debug_lines": [
          {
            "line_number": 22,
            "content": "print(\"✅ GenerationPanel (Simple) inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 85,
            "content": "print(\"📦 Recurso agregado: %s %s\" % [data.emoji, data.name])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 99,
            "content": "print(\"🚜 Generador agregado: %s %s\" % [data.emoji, data.name])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 153,
            "content": "print(\"✅ Generador comprado: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 157,
            "content": "print(\"❌ No se pudo comprar generador: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 160,
            "content": "print(\"📤 Emitiendo señal de compra de generador: %s\" % generator_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 166,
            "content": "print(\"🔗 GenerationPanel (Simple) conectado con GeneratorManager\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 7
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\TabNavigator.gd",
        "debug_lines": [
          {
            "line_number": 33,
            "content": "print(\"🔄 TabNavigator inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 107,
            "content": "print(\"📱 Cambiado a pestaña: %s\" % tab_name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 144,
            "content": "print(\"⏸️ Botón pausa presionado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 183,
            "content": "print(\"🗑️ Solicitando reset de datos...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 189,
            "content": "print(\"💾 Solicitando nuevo slot...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 194,
            "content": "print(\"🔄 Cargando slot: \", slot_id)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 200,
            "content": "print(\"📁 Guardando datos manualmente...\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 7
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameManager.gd",
        "debug_lines": [
          {
            "line_number": 28,
            "content": "print(\"🎮 GameManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 158,
            "content": "print(\"🎮 Juego iniciado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 168,
            "content": "print(\"⏸️ Juego pausado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 178,
            "content": "print(\"▶️ Juego reanudado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 212,
            "content": "print(\"💾 Juego guardado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 220,
            "content": "print(\"📄 No hay datos guardados, comenzando juego nuevo\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 235,
            "content": "print(\"💾 Datos del juego cargados\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 7
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ResourceManager.gd",
        "debug_lines": [
          {
            "line_number": 113,
            "content": "print(\"🏪 ResourceManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 126,
            "content": "# Dar algunos recursos iniciales para testing",
            "pattern": "#.*TEST"
          },
          {
            "line_number": 138,
            "content": "push_warning(\"⚠️ Recurso no desbloqueado: \" + resource_id)",
            "pattern": "push_warning\\s*\\("
          },
          {
            "line_number": 152,
            "content": "print(\"📦 \", RESOURCE_DATA[resource_id].name, \": \", old_amount, \" → \", new_amount)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 177,
            "content": "print(\"📦 \", RESOURCE_DATA[resource_id].name, \": \", old_amount, \" → \", new_amount)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 226,
            "content": "print(\"🍹 Bebida completada: \", recipe.name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 240,
            "content": "print(\"🔓 Recurso desbloqueado: \", RESOURCE_DATA[resource_id].name)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 7
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\MainMenu.gd",
        "debug_lines": [
          {
            "line_number": 14,
            "content": "print(\"📱 MainMenu cargado - Aplicando tema profesional\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 39,
            "content": "print(\"🎯 MainMenu configurado con tema profesional cervecería\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 62,
            "content": "print(\"🎮 Iniciando juego...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 67,
            "content": "print(\"⚙️ Abriendo configuración...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 72,
            "content": "print(\"📜 Mostrando créditos...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 77,
            "content": "print(\"❌ Saliendo del juego...\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 6
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SettingsMenu.gd",
        "debug_lines": [
          {
            "line_number": 13,
            "content": "print(\"⚙️ SettingsMenu cargado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 89,
            "content": "print(\"🌍 Idioma cambiado a índice: \", index)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 94,
            "content": "print(\"🔊 Volumen principal: \", value)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 99,
            "content": "print(\"🎵 Volumen música: \", value)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 104,
            "content": "print(\"🔔 Volumen efectos: \", value)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 109,
            "content": "print(\"⬅️ Volviendo atrás desde configuración\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 6
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\SimpleGridLayout.gd",
        "debug_lines": [
          {
            "line_number": 44,
            "content": "print(\"✅ SimpleGridLayout configurado: %d columnas, spacing %d\" % [columns, spacing])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 119,
            "content": "print(\"📐 Cuadrícula actualizada a %d columnas\" % columns)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 126,
            "content": "print(\"🧹 Cuadrícula limpiada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 137,
            "content": "print(\"📱 Configuración mobile aplicada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 147,
            "content": "print(\"📱 Configuración tablet aplicada\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 157,
            "content": "print(\"🖥️ Configuración desktop aplicada\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 6
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\SplashScreen.gd",
        "debug_lines": [
          {
            "line_number": 96,
            "content": "print(\"⏳ SplashScreen: Iniciando carga...\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 109,
            "content": "print(\"✅ Carga completada - Transicionando al menú principal\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 123,
            "content": "# Función para debug - permitir saltar splash con clic (DESACTIVADA)",
            "pattern": "#.*DEBUG"
          },
          {
            "line_number": 126,
            "content": "#\t\tprint(\"🔄 Saltando splash (debug)\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 126,
            "content": "#\t\tprint(\"🔄 Saltando splash (debug)\")",
            "pattern": "#.*DEBUG"
          }
        ],
        "total_debug_lines": 5
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\OffersComponent.gd",
        "debug_lines": [
          {
            "line_number": 19,
            "content": "print(\"🏪 OffersComponent inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 50,
            "content": "print(\"🏪 Configurando ofertas para %d estaciones\" % stations.size())",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 92,
            "content": "print(\"🏪 Creando interfaz de ofertas para: %s\" % station_name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 288,
            "content": "print(\"🏪 Oferta toggled: %s = %s\" % [station_id, enabled])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 293,
            "content": "print(\"💰 Precio solicitado para: %s\" % station_id)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 5
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\components\\StockDisplayComponent.gd",
        "debug_lines": [
          {
            "line_number": 33,
            "content": "print(\"📦 StockDisplayComponent inicializado (modo: %s)\" % DisplayMode.keys()[display_mode])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 53,
            "content": "print(",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 70,
            "content": "print(\"❌ StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 419,
            "content": "print(\"📦 Item seleccionado: %s %s (%d)\" % [item_type, item_name, quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 426,
            "content": "print(\"📦 Acción solicitada: %s - %d %s (%s)\" % [action, quantity, item_name, item_type])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 5
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\StockManager.gd",
        "debug_lines": [
          {
            "line_number": 11,
            "content": "print(\"📦 StockManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 16,
            "content": "print(\"📦 StockManager conectado a GameData\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 31,
            "content": "print(\"❌ StockManager: Tipo de item desconocido: %s\" % item_type)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 107,
            "content": "print(\"❌ Stock insuficiente: %s tiene %d, se requieren %d\" % [item_name, current_stock, quantity])",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 206,
            "content": "print(\"❌ ERROR: No se pudo consumir %s para receta\" % ingredient)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 5
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\PauseMenu.gd",
        "debug_lines": [
          {
            "line_number": 12,
            "content": "print(\"⏸️ PauseMenu cargado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 34,
            "content": "print(\"▶️ Reanudando juego\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"⚙️ Abriendo configuración desde pausa\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 49,
            "content": "print(\"🏠 Volviendo al menú principal\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 4
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\ProductionManager.gd",
        "debug_lines": [
          {
            "line_number": 14,
            "content": "print(\"🏭 ProductionManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 37,
            "content": "print(\"🔓 Estación desbloqueada: %s\" % station_def.name)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 78,
            "content": "print(\"❌ ProductionManager: StockManager no disponible\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 90,
            "content": "print(\"🍺 Producido: +1 %s\" % station_def.produces)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 4
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\ResourceButton.gd",
        "debug_lines": [
          {
            "line_number": 5,
            "content": "# class_name ResourceButton  # Comentado temporalmente para evitar conflictos",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 53,
            "content": "# Crear una etiqueta temporal para mostrar el emoji",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 117,
            "content": "print(\"🎯 Recurso clickeado: \", resource_type)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 125,
            "content": "# Efecto de scale temporal",
            "pattern": "#.*TEMP"
          }
        ],
        "total_debug_lines": 4
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\AppConfig.gd",
        "debug_lines": [
          {
            "line_number": 24,
            "content": "print(\"🎮 AppConfig inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 25,
            "content": "print(\"📱 Plataforma: \", OS.get_name())",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 26,
            "content": "print(\"🏗️ Build: \", build_version)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 27,
            "content": "print(\"🐛 Debug: \", is_debug)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 4
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\Locale.gd",
        "debug_lines": [
          {
            "line_number": 18,
            "content": "print(\"🌍 Locale inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 22,
            "content": "print(\"📱 Idioma del sistema: \", system_language)",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 36,
            "content": "push_warning(\"⚠️ Idioma no soportado: \" + language_code)",
            "pattern": "push_warning\\s*\\("
          },
          {
            "line_number": 42,
            "content": "print(\"🔄 Idioma cambiado a: \", SUPPORTED_LANGUAGES[language_code])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 4
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\Credits.gd",
        "debug_lines": [
          {
            "line_number": 9,
            "content": "print(\"📜 Credits cargado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 16,
            "content": "print(\"✅ Credits configurado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 20,
            "content": "print(\"⬅️ Regresando al menú principal\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 3
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\GameConfig.gd",
        "debug_lines": [
          {
            "line_number": 184,
            "content": "print(\"⚠️ STARTING_MONEY debe ser mayor que 0\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 188,
            "content": "print(\"⚠️ GENERATOR_SCALE_FACTOR debe ser mayor que 1.0\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 192,
            "content": "print(\"⚠️ STATION_SCALE_FACTOR debe ser mayor que 1.0\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 3
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BasePanel.gd",
        "debug_lines": [
          {
            "line_number": 3,
            "content": "## Implementa funcionalidad común y template method pattern",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 25,
            "content": "# TEMPLATE METHOD PATTERN - Flujo de inicialización estandarizado",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 45,
            "content": "# Métodos del template - implementados en la clase base",
            "pattern": "#.*TEMP"
          }
        ],
        "total_debug_lines": 3
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UpgradeManager.gd",
        "debug_lines": [
          {
            "line_number": 153,
            "content": "print(\"🔧 UpgradeManager inicializado\")",
            "pattern": "print\\s*\\("
          },
          {
            "line_number": 318,
            "content": "print(\"🔧 Upgrade comprado: \", upgrade_data.name, \" nivel \", new_level)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 2
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\BeverageButton.gd",
        "debug_lines": [
          {
            "line_number": 5,
            "content": "# class_name BeverageButton  # Comentado temporalmente para evitar conflictos",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 73,
            "content": "print(\"🥤 Bebida clickeada: \", beverage_type)",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 2
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\CurrencyDisplay.gd",
        "debug_lines": [
          {
            "line_number": 5,
            "content": "# class_name CurrencyDisplay  # Comentado temporalmente para evitar conflictos",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 93,
            "content": "# Efecto de color temporal",
            "pattern": "#.*TEMP"
          }
        ],
        "total_debug_lines": 2
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\components\\BuyCard.gd",
        "debug_lines": [
          {
            "line_number": 2,
            "content": "# class_name BuyCard  # Comentado temporalmente para evitar conflictos RefCounted",
            "pattern": "#.*TEMP"
          },
          {
            "line_number": 164,
            "content": "print(\"🎯 %s: %s x%d\" % [card_type.capitalize(), item_id, current_quantity])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 2
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\GameScene.gd",
        "debug_lines": [
          {
            "line_number": 11,
            "content": "print(\"🎮 GameScene inicializada usando GameController modular\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 1
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\OffersScene.gd",
        "debug_lines": [
          {
            "line_number": 3,
            "content": "## OffersScene - Sistema de ofertas especiales y promociones temporales",
            "pattern": "#.*TEMP"
          }
        ],
        "total_debug_lines": 1
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\core\\UIComponentsFactory.gd",
        "debug_lines": [
          {
            "line_number": 242,
            "content": "tween.tween_callback(func(): print(\"✨ Animación fade-in completada\"))",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 1
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\scripts\\ui\\IdleBuyButton.gd",
        "debug_lines": [
          {
            "line_number": 93,
            "content": "print(\"🔘 IdleBuyButton presionado: %s x%d\" % [item_id, current_multiplier])",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 1
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\ComponentsPreloader.gd",
        "debug_lines": [
          {
            "line_number": 37,
            "content": "print(\"ComponentsPreloader: Scene Composition components loaded\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 1
      },
      {
        "file": "E:\\GitHub\\bar-sik\\project\\singletons\\GameEvents.gd",
        "debug_lines": [
          {
            "line_number": 33,
            "content": "print(\"🎯 GameEvents inicializado - Sistema de eventos BAR-SIK\")",
            "pattern": "print\\s*\\("
          }
        ],
        "total_debug_lines": 1
      }
    ]
  }
}